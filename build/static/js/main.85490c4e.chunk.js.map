{"version":3,"sources":["utils/setAuthToken.js","utils/customAxios.js","redux/slices/userSlice.js","utils/formatters.js","redux/slices/teamsSlice.js","redux/slices/gamesSlice.js","redux/slices/gameOddsSlice.js","redux/store.js","utils/authHelper.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","customAxios","create","interceptors","request","use","config","localStorage","getItem","error","Promise","reject","REACT_APP_SERVER_URL","process","loginUser","createAsyncThunk","username","password","post","method","body","JSON","stringify","response","ok","json","Error","message","data","loginUserSuccess","accessToken","userSlice","createSlice","name","initialState","isAuthenticated","loading","user","reducers","logoutUser","state","removeItem","extraReducers","builder","addCase","pending","status","fulfilled","action","setItem","payload","rejected","selectIsAuthenticated","actions","monthMapper","getNBATeamName","code","formatDayjsDate","date","$y","$M","$D","formatDateToString","getFullYear","getMonth","getDate","getTeamClass","teamClass","getFullDateTime","dateTime","Date","getHours","getMinutes","hasDuplicateGameID","arr","gameIDMap","Map","item","has","gameID","set","sumOdds","sum","parseFloat","teamSelected","odds","teamsAdapter","createEntityAdapter","selectId","team","sortComparer","a","b","localeCompare","sliceName","teams","getInitialState","standing","fetchTeams","_args","rejectWithValue","fulfillWithValue","fetch","then","fetchTeamsStanding","teamsSlice","resetTeams","setAll","getSelectors","getCurrentContenderTeams","selectById","selectAll","globalState","contenderTeams","getCurrentMediumTeams","mediumTeams","getCurrentLooserTeams","looserTeams","getLakersInfo","lakersInfo","gamesAdapter","game","emptyInitialState","fetchGamesByDate","dateFormatted","encodeURIComponent","gamesSlice","selectAllGames","getFetchTeamsClassStatus","gameOddsAdapter","gameOdd","fetchGameOddsByDate","setMany","selectAllGameOdds","store","configureStore","reducer","games","gameOdds","users","PrivateRoute","Component","component","rest","render","props","to","pathname","from","location","NotFound","AppBar","lazy","Home","BetSimulator","Login","App","dispatch","useDispatch","useSelector","useEffect","exact","path"],"mappings":"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","file":"static/js/main.85490c4e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = (token) => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"./setAuthToken\";\n\nconst customAxios = axios.create();\n\n// Attach the interceptor to the customAxios instance\ncustomAxios.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"accessToken\");\n    if (token) {\n      setAuthToken(token);\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default customAxios;\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport customAxios from \"../../utils/customAxios\";\n\nconst { REACT_APP_SERVER_URL } = process.env;\n\nexport const loginUser = createAsyncThunk(\n  \"user/login\",\n  async ({ username, password }) => {\n    const response = await customAxios.post(\n      `${REACT_APP_SERVER_URL}/users/login`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username, password }),\n      }\n    );\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message);\n    }\n\n    const data = await response.json();\n    return data;\n  }\n);\n\nexport const loginUserSuccess = createAsyncThunk(\n  \"user/loginSuccess\",\n  async ({ accessToken }) => {\n    const response = await customAxios.post(\n      `${REACT_APP_SERVER_URL}/users/loginSuccess`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ accessToken }),\n      }\n    );\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message);\n    }\n\n    const data = await response.json();\n    return data;\n  }\n);\n\nexport const userSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    accessToken: null,\n    isAuthenticated: false,\n    loading: false,\n    user: null,\n    error: null,\n  },\n  reducers: {\n    logoutUser: (state) => {\n      localStorage.removeItem(\"accessToken\");\n      state.user = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n        localStorage.setItem(\"accessToken\", action.payload.accessToken);\n        state.accessToken = action.payload.accessToken;\n        state.user = action.payload;\n        state.isAuthenticated = true;\n      })\n      .addCase(loginUser.rejected, (state, action) => {\n        state.status = \"failed\";\n        localStorage.removeItem(\"accessToken\");\n        state.accessToken = \"\";\n        state.error = action.error.message;\n        state.isAuthenticated = false;\n      })\n      .addCase(loginUserSuccess.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(loginUserSuccess.fulfilled, (state, action) => {\n        state.status = \"succeeded\";\n      })\n      .addCase(loginUserSuccess.rejected, (state, action) => {\n        state.status = \"failed\";\n        localStorage.removeItem(\"accessToken\");\n        state.accessToken = \"\";\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport const selectUser = (state) => state.user.user;\nexport const selectStatus = (state) => state.user.status;\nexport const selectError = (state) => state.user.error;\nexport const selectIsAuthenticated = (state) => state.user.isAuthenticated;\n\nexport const { logoutUser } = userSlice.actions;\n\nexport default userSlice.reducer;\n","const monthMapper = {\n  0: \"JAN\",\n  1: \"FEB\",\n  2: \"MAR\",\n  3: \"APR\",\n  4: \"MAY\",\n  5: \"JUN\",\n  6: \"JUL\",\n  7: \"AGO\",\n  8: \"SEP\",\n  9: \"OCT\",\n  10: \"NOV\",\n  11: \"DEC\",\n};\n\nexport const getNBATeamName = (code) => {\n  switch (code) {\n    case \"ATL\":\n      return \"Atlanta Hawks\";\n    case \"BOS\":\n      return \"Boston Celtics\";\n    case \"BKN\":\n      return \"Brooklyn Nets\";\n    case \"CHA\":\n      return \"Charlotte Hornets\";\n    case \"CHI\":\n      return \"Chicago Bulls\";\n    case \"CLE\":\n      return \"Cleveland Cavaliers\";\n    case \"DAL\":\n      return \"Dallas Mavericks\";\n    case \"DEN\":\n      return \"Denver Nuggets\";\n    case \"DET\":\n      return \"Detroit Pistons\";\n    case \"GSW\":\n      return \"Golden State Warriors\";\n    case \"HOU\":\n      return \"Houston Rockets\";\n    case \"IND\":\n      return \"Indiana Pacers\";\n    case \"LAC\":\n      return \"Los Angeles Clippers\";\n    case \"LAL\":\n      return \"Los Angeles Lakers\";\n    case \"MEM\":\n      return \"Memphis Grizzlies\";\n    case \"MIA\":\n      return \"Miami Heat\";\n    case \"MIL\":\n      return \"Milwaukee Bucks\";\n    case \"MIN\":\n      return \"Minnesota Timberwolves\";\n    case \"NO\":\n      return \"New Orleans Pelicans\";\n    case \"NYK\":\n      return \"New York Knicks\";\n    case \"OKC\":\n      return \"Oklahoma City Thunder\";\n    case \"ORL\":\n      return \"Orlando Magic\";\n    case \"PHI\":\n      return \"Philadelphia 76ers\";\n    case \"PHX\":\n      return \"Phoenix Suns\";\n    case \"POR\":\n      return \"Portland Trail Blazers\";\n    case \"SAC\":\n      return \"Sacramento Kings\";\n    case \"SAS\":\n      return \"San Antonio Spurs\";\n    case \"TOR\":\n      return \"Toronto Raptors\";\n    case \"UTA\":\n      return \"Utah Jazz\";\n    case \"WAS\":\n      return \"Washington Wizards\";\n    default:\n      return \"Unknown team code\";\n  }\n};\n\nexport const formatDayjsDate = (date) =>\n  `${date.$y}-${monthMapper[date.$M]}-${date.$D}`;\n\nexport const formatDateToString = (date) =>\n  `${date.getFullYear()}-${monthMapper[date.getMonth()]}-${date.getDate()}`;\n\nexport const getTeamClass = (teamClass) => {\n  switch (teamClass) {\n    case \"C\":\n      return \"Contender\";\n    case \"M\":\n      return \"Medium\";\n    case \"L\":\n      return \"Looser\";\n    default:\n      break;\n  }\n};\n\nexport const getDateTime = (date) => {\n  const dateTime = new Date(date);\n  return dateTime.getHours();\n};\n\nexport const getFullDateTime = (date) => {\n  const dateTime = new Date(date);\n  return `${dateTime.getHours()}:${\n    dateTime.getMinutes() === 0 ? \"00\" : dateTime.getMinutes()\n  }`;\n};\n\nexport const hasDuplicateGameID = (arr) => {\n  const gameIDMap = new Map();\n\n  for (const item of arr) {\n    if (gameIDMap.has(item.gameID)) {\n      return true;\n    }\n    gameIDMap.set(item.gameID, true);\n  }\n\n  return false;\n};\n\nexport const sumOdds = (arr) => {\n  let sum = 0;\n  for (const item of arr) {\n    sum += parseFloat(item.teamSelected.odds);\n  }\n  return sum;\n}","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\n\nconst { REACT_APP_SERVER_URL } = process.env;\n\nconst teamsAdapter = createEntityAdapter({\n  selectId: (team) => team.code,\n  sortComparer: (a, b) => b.teamClass.localeCompare(a.teamClass),\n});\n\nconst sliceName = \"teams\";\nconst emptyInitialState = teamsAdapter.getInitialState();\n\nconst initialState = {\n  teams: emptyInitialState,\n  status: \"idle\",\n  error: null,\n  standing: {\n    status: \"idle\",\n    error: null,\n    data: null,\n  },\n};\n\nexport const fetchTeams = createAsyncThunk(\n  `${sliceName}/fetchTeams`,\n  async (_args, { rejectWithValue, fulfillWithValue }) => {\n    try {\n      const response = await fetch(`${REACT_APP_SERVER_URL}/teams`).then(\n        (response) => response.json()\n      );\n      return fulfillWithValue(response);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const fetchTeamsStanding = createAsyncThunk(\n  `${sliceName}/fetchTeamsStanding`,\n  async (_args, { rejectWithValue, fulfillWithValue }) => {\n    try {\n      const response = await fetch(\n        `${REACT_APP_SERVER_URL}/teams/standing`\n      ).then((response) => response.json());\n      return fulfillWithValue(response);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const teamsSlice = createSlice({\n  name: sliceName,\n  initialState,\n  reducers: {\n    resetTeams: () => initialState,\n  },\n  extraReducers: {\n    [fetchTeams.pending]: (state) => {\n      state.status = \"LOADING\";\n    },\n    [fetchTeams.fulfilled]: (state, action) => {\n      state.status = \"SUCCEEDED\";\n      teamsAdapter.setAll(state.teams, action.payload);\n    },\n    [fetchTeams.rejected]: (state, action) => {\n      state.status = \"FAILED\";\n      state.error = action.error.message;\n    },\n    [fetchTeamsStanding.pending]: (state) => {\n      state.standing.status = \"LOADING\";\n    },\n    [fetchTeamsStanding.fulfilled]: (state, action) => {\n      state.standing.status = \"SUCCEEDED\";\n      state.standing.data = action.payload;\n    },\n    [fetchTeamsStanding.rejected]: (state, action) => {\n      state.standing.status = \"FAILED\";\n      state.standing.error = action.error.message;\n    },\n  },\n});\n\nexport const { selectById: selectTeam, selectAll: selectAllTeams } =\n  teamsAdapter.getSelectors((state) => state[sliceName].teams);\n\nexport const getTeamStatusService = (globalState) => globalState.teams.status;\nexport const getCurrentContenderTeams = (globalState) =>\n  globalState.teams.standing.data?.contenderTeams;\nexport const getCurrentMediumTeams = (globalState) =>\n  globalState.teams.standing.data?.mediumTeams;\nexport const getCurrentLooserTeams = (globalState) =>\n  globalState.teams.standing.data?.looserTeams;\nexport const getLakersInfo = (globalState) =>\n  globalState.teams.standing.data?.lakersInfo;\n\nexport const { resetTeams } = teamsSlice.actions;\n\nexport default teamsSlice.reducer;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\n\nimport { formatDayjsDate } from \"../../utils/formatters.js\";\n\nconst { REACT_APP_SERVER_URL } = process.env;\n\nconst gamesAdapter = createEntityAdapter({\n  selectId: (game) => game.gameID,\n});\n\nconst sliceName = \"games\";\nconst emptyInitialState = gamesAdapter.getInitialState();\n\nconst initialState = {\n  ...emptyInitialState,\n  status: \"idle\",\n  error: null,\n};\n\nexport const fetchGamesByDate = createAsyncThunk(\n  `${sliceName}/fetchGamesByDate`,\n  async (date, { rejectWithValue, fulfillWithValue }) => {\n    try {\n      const dateFormatted = formatDayjsDate(date);\n      const response = await fetch(\n        `${REACT_APP_SERVER_URL}/games/gamesByDate/${encodeURIComponent(\n          dateFormatted\n        )}` // date formatted: 2023-JAN-17\n      ).then((response) => response.json());\n      return fulfillWithValue(response);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const gamesSlice = createSlice({\n  name: sliceName,\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchGamesByDate.pending]: (state) => {\n      state.status = \"LOADING\";\n    },\n    [fetchGamesByDate.fulfilled]: (state, action) => {\n      state.status = \"SUCCEEDED\";\n      gamesAdapter.setAll(state, action.payload);\n    },\n    [fetchGamesByDate.rejected]: (state, action) => {\n      state.status = \"FAILED\";\n      state.error = action.error.message;\n    },\n  },\n});\n\nexport const { selectAll: selectAllGames } = gamesAdapter.getSelectors(\n  (state) => state[sliceName]\n);\n\nexport const getFetchTeamsClassStatus = (state) => state[sliceName].status;\n\nexport default gamesSlice.reducer;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\n\nimport { formatDateToString } from \"../../utils/formatters.js\";\n\nconst { REACT_APP_SERVER_URL } = process.env;\n\nconst gameOddsAdapter = createEntityAdapter({\n  selectId: (gameOdd) => gameOdd.gameID,\n});\n\nconst sliceName = \"gameOdds\";\nconst emptyInitialState = gameOddsAdapter.getInitialState();\n\nconst initialState = {\n  ...emptyInitialState,\n  status: \"idle\",\n  error: null,\n};\n\nexport const fetchGameOddsByDate = createAsyncThunk(\n  `${sliceName}/fetchGameOddsByDate`,\n  async (date, { rejectWithValue, fulfillWithValue }) => {\n    try {\n      const dateFormatted = formatDateToString(date);\n      const response = await fetch(\n        `${REACT_APP_SERVER_URL}/games/gameOddsByDate/${encodeURIComponent(\n          dateFormatted\n        )}` // date formatted: 2023-JAN-17\n      ).then((response) => response.json());\n      return fulfillWithValue(response);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const gamesSlice = createSlice({\n  name: sliceName,\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchGameOddsByDate.pending]: (state) => {\n      state.status = \"LOADING\";\n    },\n    [fetchGameOddsByDate.fulfilled]: (state, action) => {\n      state.status = \"SUCCEEDED\";\n      gameOddsAdapter.setMany(state, action.payload);\n    },\n    [fetchGameOddsByDate.rejected]: (state, action) => {\n      state.status = \"FAILED\";\n      state.error = action.error.message;\n    },\n  },\n});\n\nexport const { selectAll: selectAllGameOdds } = gameOddsAdapter.getSelectors(\n  (state) => state[sliceName]\n);\n\nexport default gamesSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport teams from \"./slices/teamsSlice\";\nimport games from \"./slices/gamesSlice\";\nimport gameOdds from \"./slices/gameOddsSlice\";\nimport users from \"./slices/userSlice\";\n\nexport const store = configureStore({\n  reducer: { teams, games, gameOdds, users },\n});\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n);\n\nconst NotFound = () => (\n  <div>\n    <h2>404 - Page not found</h2>\n    <p>The requested page could not be found.</p>\n  </div>\n);\n\nexport { PrivateRoute, NotFound };\n","import React, { useEffect, lazy } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport {\n  loginUserSuccess,\n  selectIsAuthenticated,\n} from \"./redux/slices/userSlice\";\nimport { PrivateRoute, NotFound } from \"./utils/authHelper\";\n\nimport \"./index.css\";\n\nconst AppBar = lazy(() => import(\"./components/appBar/index.js\"));\nconst Home = lazy(() => import(\"./pages/home/index.js\"));\nconst BetSimulator = lazy(() => import(\"./pages/betSimulator/index.js\"));\n// const Teams = lazy(() => import(\"./pages/teams/index.js\"));\nconst Login = lazy(() => import(\"./pages/login/index.js\"));\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(selectIsAuthenticated);\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (accessToken) {\n      // TODO: verify token with backend\n      dispatch(loginUserSuccess(accessToken));\n    }\n  }, [dispatch]);\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <AppBar />\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <PrivateRoute\n            exact\n            path=\"/\"\n            component={Home}\n            isAuthenticated={isAuthenticated}\n          />\n          <PrivateRoute\n            exact\n            path=\"/profile\"\n            component={BetSimulator}\n            isAuthenticated={isAuthenticated}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}