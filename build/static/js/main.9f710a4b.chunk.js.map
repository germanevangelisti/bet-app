{"version":3,"sources":["firebase/config.js","firebase/dataHelpers.js","redux/slices/teamsSlice.js","redux/store.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","teamsDataMapper","team","code","name","logo","teamClass","class","record","winningPer","winning_perc","winningStreak","winning_streak","loosingStreak","loosing_streak","getTeamsData","teamsCol","collection","getDocs","then","snap","docs","map","doc","data","teamList","teamsAdapter","createEntityAdapter","selectId","sortComparer","a","b","localeCompare","sliceName","initialState","teams","getInitialState","schedule","status","error","fetchTeams","createAsyncThunk","_args","rejectWithValue","fulfillWithValue","teamsByFirebase","fetchSchedule","fetch","response","json","teamsSlice","createSlice","reducers","resetTeams","extraReducers","pending","state","fulfilled","action","setAll","payload","rejected","message","getSelectors","selectAllTeams","selectById","selectAll","getTeamStatusService","globalState","actions","store","configureStore","reducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppBar","lazy","Home","Dashboard","Teams","ReactDOM","render","fallback","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.9f710a4b.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  getFirestore,\n  collection,\n  getDocs,\n} from \"firebase/firestore/lite\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCfdHdIEaqHDIZHPTMmJ3V_7TKF4WMcFhs\",\n  authDomain: \"bet-app-d9203.firebaseapp.com\",\n  projectId: \"bet-app-d9203\",\n  storageBucket: \"bet-app-d9203.appspot.com\",\n  messagingSenderId: \"417238423651\",\n  appId: \"1:417238423651:web:8664c57554a74b8c858056\",\n  measurementId: \"G-EFZMKG378M\",\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nexport { collection, getDocs, db };\n","import { collection, getDocs, db } from \"./config\";\n\nexport function teamsDataMapper(team) {\n  return {\n    code: team.code,\n    name: team.name,\n    logo: team.logo,\n    teamClass: team.class,\n    record: team.record,\n    winningPer: team.winning_perc,\n    winningStreak: team.winning_streak,\n    loosingStreak: team.loosing_streak,\n  };\n}\n\nexport const getTeamsData = async () => {\n  const teamsCol = collection(db, \"teams\");\n  const teamList = await getDocs(teamsCol).then((snap) =>\n    snap.docs.map((doc) => doc.data())\n  );\n  return teamList;\n};\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\n\nimport { teamsDataMapper, getTeamsData } from \"../../firebase/dataHelpers\";\n\nconst teamsAdapter = createEntityAdapter({\n  selectId: (team) => team.code,\n  sortComparer: (a, b) => b.teamClass.localeCompare(a.teamClass),\n});\n\nconst sliceName = \"teams\";\nconst emptyInitialState = teamsAdapter.getInitialState();\n\nconst initialState = {\n  teams: emptyInitialState,\n  schedule: null,\n  status: \"idle\",\n  error: null,\n};\n\nexport const fetchTeams = createAsyncThunk(\n  `${sliceName}/fetchTeams`,\n  async (_args, { rejectWithValue, fulfillWithValue }) => {\n    try {\n      const teamsByFirebase = await getTeamsData().then((teams) => {\n        return teams.map((team) => teamsDataMapper(team));\n      });\n\n      return fulfillWithValue(teamsByFirebase);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const fetchSchedule = createAsyncThunk(\n  `${sliceName}/fetchSchedule`,\n  async (_args, { rejectWithValue, fulfillWithValue }) => {\n    try {\n      const response = await fetch(\n        \"https://api.sportsdata.io/v3/nba/scores/json/Games/2023?key=0658e8d8e3814089911e3bcd8cd37215\"\n      ).then((response) => response.json());\n      return fulfillWithValue(response);\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const teamsSlice = createSlice({\n  name: sliceName,\n  initialState,\n  reducers: {\n    resetTeams: () => initialState,\n  },\n  extraReducers: {\n    [fetchTeams.pending]: (state) => {\n      state.status = \"LOADING\";\n    },\n    [fetchTeams.fulfilled]: (state, action) => {\n      state.status = \"SUCCEEDED\";\n      teamsAdapter.setAll(state.teams, action.payload);\n    },\n    [fetchTeams.rejected]: (state, action) => {\n      state.status = \"FAILED\";\n      state.error = action.error.message;\n    },\n    [fetchSchedule.pending]: (state) => {\n      state.status = \"LOADING\";\n    },\n    [fetchSchedule.fulfilled]: (state, action) => {\n      state.status = \"SUCCEEDED\";\n      state.schedule = action.payload;\n    },\n    [fetchSchedule.rejected]: (state, action) => {\n      state.status = \"FAILED\";\n      state.error = action.error.message;\n    },\n  },\n});\n\nexport const { selectById: selectTeam, selectAll: selectAllTeams } =\n  teamsAdapter.getSelectors((state) => state[sliceName].teams);\n\nexport const getTeamStatusService = (globalState) => globalState.teams.status;\n\nexport const { resetTeams } = teamsSlice.actions;\n\nexport default teamsSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport teams from \"./slices/teamsSlice\";\n\nexport const store = configureStore({\n  reducer: { teams },\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { lazy, Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nconst AppBar = lazy(() => import(\"./components/appBar/index.js\"));\nconst Home = lazy(() => import(\"./components/home/index.js\"));\nconst Dashboard = lazy(() => import(\"./components/dashboard/index.js\"));\nconst Teams = lazy(() => import(\"./components/teams/index.js\"));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Suspense fallback={<div />}>\n      <BrowserRouter>\n        <AppBar />\n        <Switch>\n          <Route exact path={[\"/home\", \"/\"]} component={Home} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/teams\" component={Teams} />Â \n        </Switch>\n      </BrowserRouter>\n    </Suspense>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}