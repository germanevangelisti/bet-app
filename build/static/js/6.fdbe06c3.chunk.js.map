{"version":3,"sources":["components/teams/index.js"],"names":["Teams","dispatch","useDispatch","allTeams","useSelector","selectAllTeams","teamsServiceStatus","getTeamStatusService","useEffect","fetchTeams","name","spacing","direction","onClick","variant","fetchSchedule","component","Paper","sx","minWidth","size","align","map","row","logo","className","src","alt","width","height","teamClass","record","winningPer","winningStreak","loosingStreak"],"mappings":"gIAAA,oIAoGeA,UA7ED,WACZ,IAAMC,EAAWC,cACXC,EAAWC,YAAYC,KACvBC,EAAqBF,YAAYG,KAKvCC,qBAAU,WACmB,SAAvBF,GACFL,EAASQ,cAEZ,GAAE,CAACR,EAAUK,IAed,OACE,qBAAKI,KAAK,QAAV,SACE,yBAAQA,KAAK,eAAb,UACE,eAAC,IAAD,CAAOC,QAAS,EAAGC,UAAU,MAA7B,UACE,cAAC,IAAD,CAAQC,QAAS,kBA1BDZ,EAASQ,cA0BR,EAAmBK,QAAQ,YAA5C,qBAGA,cAAC,IAAD,CAAQD,QAAS,kBA5BCZ,EAASc,cA4BV,EAAqBD,QAAQ,YAA9C,6BAIsB,YAAvBR,EACC,0CAEA,cAAC,IAAD,CAAgBU,UAAWC,IAA3B,SACE,eAAC,IAAD,CACEC,GAAI,CAAEC,SAAU,KAChBC,KAAK,QACL,aAAW,gBAHb,UAKE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAWC,MAAM,OAAjB,uBACA,cAAC,IAAD,CAAWA,MAAM,OAAjB,oBACA,cAAC,IAAD,CAAWA,MAAM,OAAjB,uBACA,cAAC,IAAD,CAAWA,MAAM,OAAjB,4BACA,cAAC,IAAD,CAAWA,MAAM,OAAjB,iCAGJ,cAAC,IAAD,UACGlB,EAASmB,KAAI,SAACC,GAAD,OACZ,eAAC,IAAD,WACE,cAAC,IAAD,WA9CMC,EA8CqBD,EAAIC,KA9CnBd,EA8CyBa,EAAIb,KA7CzD,sBAAKe,UAAU,kBAAf,UACE,qBACEC,IAAKF,EACLG,IAAKH,EACLI,MAAM,OACNC,OAAO,OACPJ,UAAU,aAEZ,4BAAIf,UAsCU,cAAC,IAAD,CAAWW,MAAM,OAAjB,SAAyBE,EAAIO,YAC7B,cAAC,IAAD,CAAWT,MAAM,OAAjB,SAAyBE,EAAIQ,SAC7B,cAAC,IAAD,CAAWV,MAAM,OAAjB,SAAyBE,EAAIS,aAC7B,cAAC,IAAD,CAAWX,MAAM,OAAjB,SAAyBE,EAAIU,gBAC7B,cAAC,IAAD,CAAWZ,MAAM,OAAjB,SAAyBE,EAAIW,kBANhBX,EAAIb,MA7CZ,IAACc,EAAMd,CA4CF,eAiB7B,C","file":"static/js/6.fdbe06c3.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nimport {\n  getTeamStatusService,\n  selectAllTeams,\n  fetchTeams,\n  fetchSchedule,\n} from \"../../redux/slices/teamsSlice\";\n\nimport \"./styles.css\";\n\nconst Teams = () => {\n  const dispatch = useDispatch();\n  const allTeams = useSelector(selectAllTeams);\n  const teamsServiceStatus = useSelector(getTeamStatusService);\n\n  const onRefresh = () => dispatch(fetchTeams());\n  const getSchedule = () => dispatch(fetchSchedule());\n\n  useEffect(() => {\n    if (teamsServiceStatus === \"idle\") {\n      dispatch(fetchTeams());\n    }\n  }, [dispatch, teamsServiceStatus]);\n\n  const renderTeamLogo = (logo, name) => (\n    <div className=\"teamLogoWrapper\">\n      <img\n        src={logo}\n        alt={logo}\n        width=\"45px\"\n        height=\"45px\"\n        className=\"imgClass\"\n      ></img>\n      <p>{name}</p>\n    </div>\n  );\n\n  return (\n    <div name=\"Teams\">\n      <header name=\"Teams-header\">\n        <Stack spacing={2} direction=\"row\">\n          <Button onClick={() => onRefresh()} variant=\"contained\">\n            Refresh\n          </Button>\n          <Button onClick={() => getSchedule()} variant=\"contained\">\n            Get Schedule\n          </Button>\n        </Stack>\n        {teamsServiceStatus === \"LOADING\" ? (\n          <p> Loading </p>\n        ) : (\n          <TableContainer component={Paper}>\n            <Table\n              sx={{ minWidth: 650 }}\n              size=\"small\"\n              aria-label=\"a dense table\"\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell></TableCell>\n                  <TableCell align=\"left\">TeamClass</TableCell>\n                  <TableCell align=\"left\">Record</TableCell>\n                  <TableCell align=\"left\">Winning %</TableCell>\n                  <TableCell align=\"left\">Winning Streak</TableCell>\n                  <TableCell align=\"left\">Loosing Streak</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {allTeams.map((row) => (\n                  <TableRow key={row.name}>\n                    <TableCell>{renderTeamLogo(row.logo, row.name)}</TableCell>\n                    <TableCell align=\"left\">{row.teamClass}</TableCell>\n                    <TableCell align=\"left\">{row.record}</TableCell>\n                    <TableCell align=\"left\">{row.winningPer}</TableCell>\n                    <TableCell align=\"left\">{row.winningStreak}</TableCell>\n                    <TableCell align=\"left\">{row.loosingStreak}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </header>\n    </div>\n  );\n};\n\nexport default Teams;\n"],"sourceRoot":""}