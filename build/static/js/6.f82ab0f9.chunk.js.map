{"version":3,"sources":["components/card/index.js","components/list/index.js","components/gameDetails/index.jsx","components/teamDetails/index.jsx","pages/home/index.js"],"names":["BasicCard","header","score","title","body","game","onClick","isPivot","status","isGameClosed","teamShouldWin","teamWinner","homeTeam","code","awayTeam","getTeamCodeClassName","team","Card","variant","sx","minWidth","marginTop","marginRight","borderColor","cursor","CardContent","backgroundColor","Typography","fontSize","display","justifyContent","color","gutterBottom","component","className","BasicList","items","teamClass","Box","width","maxWidth","bgcolor","List","length","map","item","ListItem","disablePadding","borderTop","ListItemButton","ListItemIcon","src","logo","alt","height","style","flexDirection","ListItemText","primary","name","record","conferenceRank","streak","winningPerc","GameDetails","homeTeamClass","getTeamClass","awayTeamClass","TeamDetails","Home","dispatch","useDispatch","gamesByDate","useSelector","selectAllGames","currentContenderTeams","getCurrentContenderTeams","currentMediumTeams","getCurrentMediumTeams","currentLooserTeams","getCurrentLooserTeams","fetchTeamsClassStatus","getFetchTeamsClassStatus","lakersInfo","getLakersInfo","today","Date","tomorrow","setDate","getDate","yesterday","RwDSEalertSeverity","recordStatusWithShiftedEnergy","alertSeverity","useState","dayjs","value","setValue","showInfo","setShowInfo","showDrawer","setShowDrawer","gameSelected","setGameSelected","teamSelected","setTeamSelected","handleToggleDrawer","handleCloseDrawer","handleSelectTeamOnClick","onCallGamesByDate","date","fetchGamesByDate","useEffect","fetchTeamsStanding","Stack","spacing","Alert","severity","AlertTitle","recordWithShiftedEnergy","Button","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","label","onChange","newValue","renderInput","params","TextField","disabled","pivotGames","filter","regularGames","pivotGamesSucceeded","pivotGamesFailed","renderInfoGames","GameID","Drawer","anchor","open","onClose"],"mappings":"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","file":"static/js/6.f82ab0f9.chunk.js","sourcesContent":["import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport CheckCircleSharpIcon from \"@mui/icons-material/CheckCircleSharp\";\nimport CancelSharpIcon from \"@mui/icons-material/CancelSharp\";\n\nimport \"./styles.css\";\n\nconst BasicCard = ({ header, title, score, body, game, onClick }) => {\n  const { isPivot, status, isGameClosed, teamShouldWin, teamWinner } = game;\n  const homeTeam = game.homeTeam.code;\n  const awayTeam = game.awayTeam.code;\n\n  const getBackgroundColor = () => {\n    if (isPivot && status === \"Scheduled\") return \"gold\";\n    if (!isPivot && status === \"Scheduled\") return \"white\";\n    if (isPivot && (status === \"Final\" || status === \"F/OT\")) return \"#8a967e\";\n    if (!isPivot && (status === \"Final\" || status === \"F/OT\")) return \"white\";\n  };\n\n  const getTeamCodeClassName = (team) => {\n    if (isPivot) {\n      if (team === teamShouldWin) return \"span-green\";\n      if (team !== teamShouldWin) return \"span-red\";\n    }\n    return \"span-default\";\n  };\n\n  const renderIconResult = () =>\n    teamWinner?.code === teamShouldWin ? (\n      <CheckCircleSharpIcon color=\"success\" />\n    ) : (\n      <CancelSharpIcon color=\"error\" />\n    );\n\n  return (\n    <Card\n      variant=\"outlined\"\n      sx={{\n        minWidth: 275,\n        marginTop: 1,\n        marginRight: 1,\n        borderColor: isPivot ? \"#590a0a\" : \"black\",\n        cursor: isPivot ? \"pointer\" : \"default\",\n      }}\n      onClick={onClick}\n    >\n      <CardContent sx={{ backgroundColor: getBackgroundColor() }}>\n        <Typography\n          sx={{\n            fontSize: 14,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n          color=\"text.primary\"\n          gutterBottom\n        >\n          {header}\n          {isGameClosed && isPivot ? renderIconResult() : <></>}\n        </Typography>\n        <Typography variant=\"h5\" component=\"div\">\n          <span\n            className={getTeamCodeClassName(awayTeam)}\n          >{`${awayTeam} `}</span>\n          vs{\" \"}\n          <span\n            className={getTeamCodeClassName(homeTeam)}\n          >{`${homeTeam}`}</span>\n        </Typography>\n        <Typography variant=\"h6\" color=\"text.secondary\">\n          {isGameClosed ? score : null}\n        </Typography>\n        <Typography\n          variant=\"body2\"\n          sx={{ color: isPivot ? \"#590a0a\" : \"black\" }}\n        >\n          {body}\n        </Typography>\n        <Typography variant=\"body2\" sx={{ color: \"blue\" }}>\n          {status}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default BasicCard;\n","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst BasicList = ({ items, teamClass, onClick }) => {\n  return (\n    <Box sx={{ width: \"100%\", maxWidth: 360, bgcolor: \"white\" }}>\n      <nav aria-label=\"teams clasification\">\n        <List>\n          <p>Current {teamClass} Teams</p>\n          {items?.length &&\n            items.map((item) => (\n              <ListItem\n                disablePadding\n                key={item.code}\n                onClick={() => onClick(item)}\n                sx={{ borderTop: 1 }}\n              >\n                <ListItemButton>\n                  <ListItemIcon>\n                    <img\n                      src={item.logo}\n                      alt={item.logo}\n                      width=\"45px\"\n                      height=\"45px\"\n                    ></img>\n                  </ListItemIcon>\n                  <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <ListItemText primary={`${item.name} (${item.record})`} />\n                    <ListItemText\n                      primary={`Conf-Rank: ${item.conferenceRank} | Streak: ${item.streak}`}\n                    />\n                    <ListItemText primary={`.${item.winningPerc}%`} />\n                  </div>\n                </ListItemButton>\n              </ListItem>\n            ))}\n        </List>\n      </nav>\n    </Box>\n  );\n};\n\nexport default BasicList;\n","import React from \"react\";\n\nimport { getTeamClass } from \"../../utils/formatters\";\n\nimport \"./styles.css\";\n\nconst GameDetails = ({ game }) => {\n  const homeTeam = game.homeTeam;\n  const awayTeam = game.awayTeam;\n  const homeTeamClass = getTeamClass(homeTeam.teamClass);\n  const awayTeamClass = getTeamClass(awayTeam.teamClass);\n\n  return (\n    <div className=\"layout\">\n      <div className=\"column\">\n        <div className=\"title\">Home team: {homeTeam.code}</div>\n        <div className={`subtitle${homeTeam.teamClass === 'C' ? '-contender' : ''}`}>{homeTeamClass}</div>\n      </div>\n      <div className=\"column\">\n        <div className=\"title\">Away team: {awayTeam.code}</div>\n        <div className=\"subtitle\">{awayTeamClass}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameDetails;\n","import React from \"react\";\n\nimport { getTeamClass } from \"../../utils/formatters\";\n\nimport \"./styles.css\";\n\nconst TeamDetails = ({ team }) => {\n  return (\n    <div className=\"layout\">\n      <div className=\"column\">\n        <div className=\"title\">TEAM: {team.name}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeamDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport dayjs from \"dayjs\";\n\nimport TextField from \"@mui/material/TextField\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport Button from \"@mui/material/Button\";\nimport Drawer from \"@mui/material/Drawer\";\nimport Stack from \"@mui/material/Stack\";\nimport Alert from \"@mui/material/Alert\";\nimport AlertTitle from \"@mui/material/AlertTitle\";\nimport Typography from \"@mui/material/Typography\";\n\nimport BasicCard from \"../../components/card/index.js\";\nimport BasicList from \"../../components/list/index.js\";\nimport GameDetails from \"../../components/gameDetails/index.jsx\";\nimport TeamDetails from \"../../components/teamDetails/index.jsx\";\n\nimport {\n  fetchTeamsStanding,\n  getCurrentContenderTeams,\n  getCurrentMediumTeams,\n  getCurrentLooserTeams,\n  getLakersInfo,\n} from \"../../redux/slices/teamsSlice\";\nimport {\n  fetchGamesByDate,\n  selectAllGames,\n  getFetchTeamsClassStatus,\n} from \"../../redux/slices/gamesSlice\";\n\nimport { getTeamClass } from \"../../utils/formatters\";\n\nimport \"./styles.css\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const gamesByDate = useSelector(selectAllGames);\n  const currentContenderTeams = useSelector(getCurrentContenderTeams);\n  const currentMediumTeams = useSelector(getCurrentMediumTeams);\n  const currentLooserTeams = useSelector(getCurrentLooserTeams);\n  const fetchTeamsClassStatus = useSelector(getFetchTeamsClassStatus);\n  const lakersInfo = useSelector(getLakersInfo);\n\n  const today = new Date();\n  const tomorrow = new Date();\n  tomorrow.setDate(today.getDate() + 1);\n  const yesterday = new Date();\n  yesterday.setDate(today.getDate() - 1);\n  const RwDSEalertSeverity =\n    lakersInfo?.recordStatusWithShiftedEnergy > 0.5 ? \"success\" : \"error\";\n  const alertSeverity = lakersInfo?.winningPerc >= 0.5 ? \"success\" : \"error\";\n\n  const [value, setValue] = useState(dayjs());\n  const [showInfo, setShowInfo] = useState(false);\n  const [showDrawer, setShowDrawer] = useState(false);\n  const [gameSelected, setGameSelected] = useState(null);\n  const [teamSelected, setTeamSelected] = useState(null);\n\n  const handleYesterdayGames = () => onCallGamesByDate(dayjs(yesterday));\n  const handleTodayGames = () => onCallGamesByDate(dayjs(today));\n  const handleTomorrowGames = () => onCallGamesByDate(dayjs(tomorrow));\n  const handleToggleDrawer = () => setShowDrawer(!showDrawer);\n  const handleCloseDrawer = () => {\n    setGameSelected(null);\n    setTeamSelected(null);\n    setShowDrawer(false);\n  };\n\n  const handleSelectTeamOnClick = (team) => {\n    setTeamSelected(team);\n    handleToggleDrawer();\n  };\n\n  const onCallGamesByDate = (date) => {\n    setShowInfo(false);\n    dispatch(fetchGamesByDate(date));\n  };\n\n  useEffect(() => {\n    dispatch(fetchTeamsStanding());\n    dispatch(fetchGamesByDate(dayjs(today)));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (fetchTeamsClassStatus === \"SUCCEEDED\") {\n      setShowInfo(true);\n    }\n  }, [fetchTeamsClassStatus]);\n\n  const renderDatePicker = () => {\n    return (\n      <>\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DatePicker\n            label=\"Basic example\"\n            value={value}\n            onChange={(newValue) => {\n              setValue(newValue);\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n        <Button\n          disabled={!value}\n          onClick={() => onCallGamesByDate(value)}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Check games for selected date\n        </Button>\n      </>\n    );\n  };\n\n  const renderTeamStanding = () => {\n    return (\n      <div className=\"teamsWrapper\">\n        <div>\n          <BasicList\n            teamClass=\"Contender\"\n            items={currentContenderTeams}\n            onClick={handleSelectTeamOnClick}\n          />\n        </div>\n        <div>\n          <BasicList\n            teamClass=\"Medium\"\n            items={currentMediumTeams}\n            onClick={handleSelectTeamOnClick}\n          />\n        </div>\n        <div>\n          <BasicList\n            teamClass=\"Loosers\"\n            items={currentLooserTeams}\n            onClick={handleSelectTeamOnClick}\n          />\n        </div>\n      </div>\n    );\n  };\n\n  const renderGames = () => {\n    return (\n      <div className=\"cardsWrapper\">\n        {showInfo ? (\n          gamesByDate?.map((game) => (\n            <div key={`${game.GameID}`}>\n              <BasicCard\n                header={`${game.isPivot ? \"PIVOT Game\" : \"Regular Game\"}`}\n                score={`${game.awayTeam.score || 0} - ${\n                  game.homeTeam.score || 0\n                }`}\n                body={`${getTeamClass(game.awayTeam.teamClass)} (${\n                  game.awayTeam.code\n                }) vs ${getTeamClass(game.homeTeam.teamClass)} (${\n                  game.homeTeam.code\n                })`}\n                onClick={() => {\n                  setGameSelected(game);\n                  handleToggleDrawer();\n                }}\n                game={game}\n              />\n            </div>\n          ))\n        ) : (\n          <div className=\"gamesSkeleton\" />\n        )}\n      </div>\n    );\n  };\n\n  const renderInfoGames = () => {\n    const pivotGames = showInfo\n      ? gamesByDate?.filter((game) => game.isPivot)\n      : [];\n    const regularGames = showInfo\n      ? gamesByDate?.filter((game) => !game.isPivot)\n      : [];\n    const pivotGamesSucceeded = showInfo\n      ? gamesByDate?.filter(\n          (game) =>\n            game.isPivot &&\n            game.isGameClosed &&\n            game.teamWinner?.code === game.teamShouldWin\n        )\n      : [];\n    const pivotGamesFailed = showInfo\n      ? gamesByDate?.filter(\n          (game) =>\n            game.isPivot &&\n            game.isGameClosed &&\n            game.teamWinner?.code !== game.teamShouldWin\n        )\n      : [];\n    return (\n      showInfo && (\n        <div className=\"infoGames\">\n          <div className=\"infoGameContent\">\n            <span>pivot games: {pivotGames?.length}</span>\n            <>\n              <span style={{ color: \"green\" }}>\n                {pivotGamesSucceeded?.length} succeeded\n              </span>\n              <span style={{ color: \"red\" }}>\n                {pivotGamesFailed?.length} falied\n              </span>\n            </>\n          </div>\n          <div className=\"infoGameContent\">\n            <span>regular games: {regularGames?.length}</span>\n          </div>\n          <div className=\"infoGameContent\">\n            <span>total games: {gamesByDate?.length}</span>\n          </div>\n        </div>\n      )\n    );\n  };\n\n  const renderDrawer = () => (\n    <Drawer anchor=\"right\" open={showDrawer} onClose={handleCloseDrawer}>\n      {gameSelected && <GameDetails game={gameSelected} />}\n      {teamSelected && <TeamDetails team={teamSelected} />}\n    </Drawer>\n  );\n\n  const renderLakersRecordWithShiftedEnergyAlert = () => (\n    <Stack sx={{ width: \"25%\" }} spacing={2}>\n      <Alert variant=\"filled\" severity={RwDSEalertSeverity}>\n        <AlertTitle>LAKERS RECORD SINCE TRADE DEADLINE</AlertTitle>\n        <Typography variant=\"body1\">\n          {lakersInfo?.recordWithShiftedEnergy}\n        </Typography>\n      </Alert>\n    </Stack>\n  );\n\n  const renderIsAbove500 = () => (\n    <Stack sx={{ width: \"20%\" }} spacing={2}>\n      <Alert variant=\"filled\" severity={alertSeverity}>\n        <AlertTitle>LAKERS CURRENT RECORD</AlertTitle>\n        <Typography variant=\"body1\">{lakersInfo?.record}</Typography>\n      </Alert>\n    </Stack>\n  );\n\n  return (\n    <div className=\"homeLayout\">\n      <div className=\"alertsWrapper\">\n        {renderLakersRecordWithShiftedEnergyAlert()}\n        {renderIsAbove500()}\n      </div>\n      <br />\n      <div className=\"dateControls\">\n        <Button\n          onClick={handleYesterdayGames}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Yesterday\n        </Button>\n        <Button\n          onClick={handleTodayGames}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Today\n        </Button>\n        <Button\n          onClick={handleTomorrowGames}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Tomorrow\n        </Button>\n        {renderDatePicker()}\n      </div>\n      {renderInfoGames()}\n      {renderGames()}\n      {renderTeamStanding()}\n      {renderDrawer()}\n    </div>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}