{"version":3,"sources":["components/appBar/index.js"],"names":["pages","settings","ResponsiveAppBar","history","useHistory","React","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","navigateTo","page","push","toLowerCase","position","maxWidth","disableGutters","variant","noWrap","component","href","sx","mr","display","xs","md","fontFamily","fontWeight","letterSpacing","color","textDecoration","flexGrow","size","onClick","event","currentTarget","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","map","textAlign","my","title","p","alt","src","mt","onClose","setting"],"mappings":"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","file":"static/js/7.ef14ff2d.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport AdbIcon from \"@mui/icons-material/Adb\";\n\nconst pages = [\"Home\", \"Dashboard\", \"Teams\"];\nconst settings = [\"Profile\", \"Account\", \"Dashboard\", \"Logout\"];\n\nconst ResponsiveAppBar = () => {\n  const history = useHistory();\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  const navigateTo = (page) => history.push(`/${page.toLowerCase()}`);\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"a\"\n            href=\"/\"\n            sx={{\n              mr: 2,\n              display: { xs: \"none\", md: \"flex\" },\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"inherit\",\n              textDecoration: \"none\",\n            }}\n          >\n            β3t@p²\n          </Typography>\n\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"left\",\n              }}\n              open={Boolean(anchorElNav)}\n              sx={{\n                display: { xs: \"block\", md: \"none\" },\n              }}\n            >\n              {pages.map((page) => (\n                <MenuItem\n                  key={page}\n                  onClick={() => {\n                    handleCloseNavMenu();\n                    navigateTo(page);\n                  }}\n                >\n                  <Typography textAlign=\"center\">{page}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <AdbIcon sx={{ display: { xs: \"flex\", md: \"none\" }, mr: 1 }} />\n          <Typography\n            variant=\"h5\"\n            noWrap\n            component=\"a\"\n            href=\"\"\n            sx={{\n              mr: 2,\n              display: { xs: \"flex\", md: \"none\" },\n              flexGrow: 1,\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"inherit\",\n              textDecoration: \"none\",\n            }}\n          >\n            LOGO\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\n            {pages.map((page) => (\n              <Button\n                key={page}\n                onClick={() => {\n                  handleCloseNavMenu();\n                  navigateTo(page);\n                }}\n                sx={{ my: 2, color: \"white\", display: \"block\" }}\n              >\n                {page}\n              </Button>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar\n                  alt=\"Remy Sharp\"\n                  src=\"https://assets.raribleuserdata.com/prod/v1/image/t_avatar_big/aHR0cHM6Ly9yYXJpYmxlLm15cGluYXRhLmNsb3VkL2lwZnMvUW1Sc0NTM2lnTllzVVdyWTNxYmtLQnYyMnBKQWZHV0hNTU40S1Z1UW9qc1cyUg==\"\n                />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: \"45px\" }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n"],"sourceRoot":""}